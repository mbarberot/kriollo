THE MIGHTY TODO_LIST
====================

** v2024.3.0 

[Epic : configuration changes with nice deprecation handling]

Then, do the real changes : 

TODO: feat(feign): add feign in the managed libs
TODO: feat(config): there was something else that could be in project too but i don't remember it yet => see the notion-cli project


** v2024.FUTURE **

[Epic : More generators ]

NEXT: feat(justfile): add justfile support
NEXT: feat(dockerfile): generate dockerfile
NEXT: feat(readme): add readme support with custom title/description/sections
NEXT: feat(maven): set source and test directories using an extension (only one || error)

[Epic : Stabilisation ]

NEXT: feat(logs): add Logging framework
NEXT: feat(config): check configuration (ie: JUnit requires Maven or Gradle, ...)
NEXT: feat(config): split configuration file
NEXT: feat(config): split configuration file (ie: project.kdl, dotfiles.kdl, components.kdl)
NEXT: feat(plugin): use a ServiceProvider (from JDK) to build dynamic module registration
NEXT: refactor(jte): use a base template for java classes
NEXT: refactor(jte): use StaticTemplates

** Ideas **

IDEA:
--
fun generate(builder: Builder) {
    builder.dir(path)
    builder.kotlinFile().withTemplate(tplPath).javaModel(namespace, imports, name).content(model)
    builder.file(path).rawContent(str)
    builder.file(path).withTemplate(tplPath).content(model)
}
--

IDEA: External basic components
--
A kdl file to register it : 

* file name 
* execution rule
* path

A template file for the generation with 

* component config
* glogal config
* maybe some services

Dir structure to be defined 
Maybe:  

codegen/
  custom-components/
    my-component/
      component.kdl
      template.kte

Note: could make use of several templates, maybe in a more elaborate version later
-- 
