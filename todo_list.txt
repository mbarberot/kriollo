
** v2014.1 **
TODO: split configuration files

IDEA for configuration split:
--
project.toml -> project & dotfiles configuration, maybe split again for dotfiles
components.toml -> generated components
--

NOTE for configuration split:
--
1. Keep backward compatibility
2. Show deprecation
3. Add migration path, automated if possible
--

** v2014.2 **
NEXT: feat(logs): add Logging framework
NEXT: feat(justfile): add justfile support
NEXT: feat(dockerfile): generate dockerfile
NEXT: feat(readme): add readme support with custom title/description/sections
NEXT: feat(config): check configuration (ie: JUnit requires Maven or Gradle, ...)
NEXT: feat(config): split configuration file
NEXT: feat(generator): handle old obsolete files using the -lock file
NEXT: feat(plugin): use a ServiceProvider (from JDK) to build dynamic module registration
NEXT: feat(maven): set source and test directories using an extension (only one || error)
NEXT: refactor(jte): use a base template for java classes
NEXT: refactor(jte): use StaticTemplates
NEXT: refactor(picocli): add to the libs configuration

IDEA:
--
fun generate(builder: Builder) {
    builder.dir(path)
    builder.kotlinFile().withTemplate(tplPath).javaModel(namespace, imports, name).content(model)
    builder.file(path).rawContent(str)
    builder.file(path).withTemplate(tplPath).content(model)
}
--
