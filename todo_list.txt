
** Todos **

(A) +qol self update => rebuild automatically to ensure the previous todoitem is correct ?

(B) +chore bump kotlin version
(B) +chore bump jackson version
(B) +chore handle refactor todos in code
(B) +generators +justfile add justfile support
(B) +generators +dockerfile generate dockerfile
(B) +generators +readme add readme support with custom title/description/sections
(B) +generators +maven set source and test directories using an extension (only one || error)
(B) +stabilization +logs add Logging framework
(B) +stabilization +config refactor usage of path "./codegen/codegen.kdl"
(B) +stabilization +config split configuration file (ie project.kdl, dotfiles.kdl, components.kdl)
(B) +stabilization +plugin use a ServiceProvider (from JDK) to build dynamic module registration
(B) +stabilization +jte use a base template for java classes
(B) +stabilization +jte use StaticTemplates

** Ideas **

IDEA:
--
fun generate(builder: Builder) {
    builder.dir(path)
    builder.kotlinFile().withTemplate(tplPath).javaModel(namespace, imports, name).content(model)
    builder.file(path).rawContent(str)
    builder.file(path).withTemplate(tplPath).content(model)
}
--

IDEA: External basic components
--
A kdl file to register it : 

* file name 
* execution rule
* path

A template file for the generation with 

* component config
* glogal config
* maybe some services

Dir structure to be defined 
Maybe:  

codegen/
  custom-components/
    my-component/
      component.kdl
      template.kte

Note: could make use of several templates, maybe in a more elaborate version later
-- 
