import java.io.File
import java.io.FileWriter
import kotlin.io.path.Path
import kotlin.io.path.createDirectory
import kotlin.io.path.createParentDirectories
import kotlin.io.path.notExists

fun main(args: Array<String>) {

    println(
        """
        Welcome to Kriollo
    """.trimIndent()
    )

    if (args.isEmpty()) {
        println(
            """
        
            Usage : 
                init-project : Init the project structure
            
        """.trimIndent()
        )
        return
    }

    if (args[0] == "init-project") {
        initNixFile()
        initGit()
        initMaven()
        return
    }
}

/*
 * TODO continue the takeover with the gitignore
 * TODO setup tests to start TDD loops => require Maven (JUnit)
 * TODO move the main class into src/main/kotlin
 * TODO takeover the script
 * TODO migrate the script to use Maven
 */

fun initGit() {
    val gitignoreTemplate = """
        # /!\ Warning
        # This file is generated by Kriollo, do not edit it manually 
        
        # Intellij files
        .idea/
        
        # Java artifacts
        *.jar
    """.trimIndent()
    initFile(".gitignore", gitignoreTemplate)
}

fun initNixFile() {
    val nixTemplate = """
        # /!\ Warning
        # This file is generated by Kriollo, do not edit it manually
        with (import <nixpkgs> {});
        mkShell {
            buildInputs = [
                jdk21
                kotlin
                maven
            ];
            shellHook = ''
              export JAVA_HOME=${'$'}{jdk21.home}
            '';
        }
    """.trimIndent()

    initFile("default.nix", nixTemplate)
}

fun initFile(filename: String, template: String) {
    println("> Generating $filename file")

    val fileToCreate = File(filename)
    if (!fileToCreate.exists()) {
        fileToCreate.createNewFile()
    }

    val fileWriter = FileWriter(fileToCreate)
    fileWriter.write(template)
    fileWriter.flush()
    fileWriter.close()
}


fun initMaven() {
    createPomFile()
    createDirectories()
}

fun createPomFile() {
    val pomTemplate = """
        <?xml version="1.0" encoding="UTF-8"?>
        <project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
                 xmlns="http://maven.apache.org/POM/4.0.0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <!-- 
                /!\ Warning  
                This file is generated by Kriollo, do not edit it manually 
            -->
            <modelVersion>4.0.0</modelVersion>
            <groupId>kriollo</groupId>
            <artifactId>kriollo</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </project>
    """.trimIndent()

    initFile("pom.xml", pomTemplate)
}

fun createDirectories() {
    val paths = listOf("./src/main/kotlin")

    paths.forEach {
        println("> Generating directory $it")
    }

    paths
        .map { Path(it) }
        .filter { it.notExists() }
        .forEach {
            it.createParentDirectories()
            it.createDirectory()
        }

}
