package kriollo.generator.script.build

import kriollo.configuration.CodegenConfiguration
import kriollo.generator.Generator
import kriollo.generator.utils.ServiceProvider

class BuildScriptGenerator: Generator {

    override fun isActivated(configuration: CodegenConfiguration): Boolean {
        return configuration.scripts.build.enabled
    }

    override fun execute(configuration: CodegenConfiguration, serviceProvider: ServiceProvider) {
        serviceProvider.fileSystem.createDirectory("./build")
        serviceProvider.fileSystem.createFile("./build/build.sh", generateContent(configuration), isScript = true)
    }

    private fun generateContent(configuration: CodegenConfiguration): String {
        val buildScriptTemplate = """
                # /!\ warning
                # this file is generated by kriollo, do not edit it manually
                
                echo "> Building jar"
                mvn clean package -DskipTests
                
                ${generateCustomSteps(configuration)}
                
                if [[ ${'$'}? > 0 ]]
                then
                    echo
                    echo "! Build failed"
                    exit 1
                else
                    echo 
                    echo "> Build successful"
                    exit 0
                fi
            """.trimIndent()
        return buildScriptTemplate
    }

    private fun generateCustomSteps(configuration: CodegenConfiguration): String {
        val customScript = configuration.scripts.build.customSteps.joinToString("\n") { (step, command) ->
            """
                    if [[ ${'$'}? > 0 ]]
                    then
                        echo 
                        echo "> ! Build failed"
                        exit 1
                    else 
                        echo 
                        echo "> $step"
                        $command
                    fi
                """
        }
        return customScript
    }

}